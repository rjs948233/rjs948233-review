//package task02;
//
//public class Ex02키워드설명 {
//
//아래 키워드에 대한 설명 작성하기 
//1-new
//----------------------------
//private, protected, private
//static
//extends
//class
//===========================================================================
//new   : Heap메모리 할당, 저장공간의 시작주소를 가져온다
//클래스를 기반으로 객체를 생성하는 명령어
//미리정의한 클래스를실체화시키는것 즉객체화시키는 것 객체생성방법
//객체생성 명령어
//	ClassName  name= new ClassName;
//사용예시
//	FruitSeller seller=new FruitSrller();
//	Fruitbuyer byer = new Fruitbuyer();
//	대입연사다의 오른쪽만보면
//	new FruitSrller();
//	new Fruitbuyer();
//    new는 객체생성을 명령하는 명령어이다 
//   다음과같은 의미를 같고 있다
//   FruitSrller 객체를 생성해라 Fruitbuyer객체를 생성해라
//   이명령어가 실행되면 메모리공간에 객체가 생성되는데 이렇게 생성된 객체를 인스턴스라고도 한다 
//   클래스에 존재하는 변수와메소드는 메모리공간에 할당되지 않아서 접근도 호출도 불가능함 안지 
//   하나의틀임 반면  new키워드로 객체를 생성하면 메모리공간에 할당이되고 메소드오 호출할수있는형태로
//   메모리공간에 존재하게된다
//   FruitSeller seller=new FruitSrller();이문장의의미는 FruitSeller객체를생성하고 이를
//   seller라는 이름의변수로 참조하는 문장 ,이문강이 실행된후부터 seller 를 통해서 객체에 접근할수 있게된다
//   seller같은 변수를 참조변수라고 한다
//
//
//2 private, protected, private
//-----------------------------------------------------------------------------
//  접근제한자
//	접근권한제어자(접근자)
//	접근제어자는 자원에 대해서 외부에서 접근가능한 법위를 제어한다클래스나 메스도혹은 선언부를 정의할때 가장처음등장하는것이 접근제어자이다
//  public제어자는 제약이없다
//  protected제어자는 같은패키지에 있거난 상속받는 클래스에서 접근이가능하다
//  default제어자는 같은패키지에 있는 클래스에서 접근가능하다
//  private제어자는 본인클래스내부에서만 접근이가능하다
//  제약이 높은순으로 private > default > proctected > public  이다
////(default)
//	다른 패키지에서 접근 불가능(package-private)
//	접근제어자를 명시하지 않으면 기본적으로 default로 설정된다
//	같은 패키지 내에서는 접근 가능
//
//public
//	대표클래스를 의미할 때 사용한다
//	모든 곳에서 접근 가능, 다른 패키지에서도 접근 가능
//
//protected
//	같은 패키지 내에서 접근 가능
//	다른 패키지에는 접근 불가능
//	자식 클래스에서는 접근 가능
//	
//private
//	다른 클래스에서 접근 불가능
//	주로 필드를 보호하기 위해서 사용
//	메소드를 이용하여 접근(메소드에서 public 접근제한자 사용)
//	getter, setter 메소드를 이용
//
//접근제한자		적용대상			     접근 가능 대상
//----------------------------------------------------
//public		클래스, 필드, 생성자,    메소드	모든 대상
//protected	    필드, 생성자, 메소드		같은 패키지 또는 자식 클래스
//default		클래스, 필드, 생성자,    메소드	같은 패키지에 소속된 클래스
//private		필드, 생성자, 메소드		같은 클래스, getter/setter
//
//
//3./static
//-----------------------------------------------------
//3. static(정적인)
//1-정적멤버는 클래스 자체에 속하는 멤버로
//2-클래스를 통해 접근 가능
//3-객체를 생성하지 않아도 사용할 수 있다
//4-정적변수(클래스변수, 스태틱변수)
//5-클래스의 모든 인스턴스에서 동일한 값을 공유, 객체간의 정보 공유에 사용된다
//6-정적메소드(클래스메소드, 스태틱메소드)
//7-객체를 생성하지 않아도 호출 가능, 주로 유틸리티 메소드나 공통동작을 구현할 때 사용된다
//8-정적블록(클래스블록, 스태틱블록)
//9-정적블록은 클래스가 로드될 때 실행되는 블록이다
//10-정적멤버를 초기화 하는데 사용된다
//11-모든 인스턴스가 생성되기 이전에 실행되므로 초기화 작업에 유리하다
//
//로드 시점 : 클래스가 처음 로드될 때 실행
//	클래스가 메모리에 로드되는 시점
//	(1) 클래스의 객체가 생성될 때(클래스 인스턴스화)
//	(2) 클래스의 정적멤버(변수나 메소드)에 접근할 때
//	(3) 클래스를 사용하는 다른 클래스가 로드될 때(참조하려는 클래스에 의존성이 있는 경우)
//static 의사전적인의미는 고정된 변화가없이이다 ,static  키워드는 선언된자원들을고정시키는역할을한다즉  static키워드를
//사용해서 선언한자원들은jvm메모리안에서오직하나만생성된다
//인스턴스변수가 인스턴스별로 존재하는 변수라면 static   변수는 딱하나만 존재해서 모든 인스턴스가 공유하는 형태의 변수이다
//static변수는 인스턴스가 생성되기저넹 별도의 메모리공간에 할당되어 초기화까지와뇨라 됨
//다른언어로구현되어있는 프로그램은 컴파일이 완료되면 하나의 실해파일이 만들어진다 그런데 자바프로그램은 하나의 실행파일로 
//만드어지지않고 여러개의 클래스파일들만 생성된다
//하나의 실행파일로 만들어진 다
//자바프로그램실해원리와그에따른장점:실행파일로 만들어진 프로그램은 실행되기위해서 실행파일 전부가 메모리에 올라가야하는데 
//자바프로그램은 필요한 만큼만 메모리공간에 올리는 방식으로 실행되어 메모리를 유연하게 사용한다
//static 메소드(클래스메소드)
//1)static메소드는  static변수와 성격이유사하다  static변수와마찬가지로 static메소드가 삽입된클래스의 모든 인스턴스로부터 접근이 가능하다
//2)인스턴스를 생성하지 않아도  static메소드를 호출할수 있다
//3)static메소드에서는 인스턴스변수로의 접근뿐만아니라 인스턴스베소드의 호출도 불가능하다
//
//
//
////4.extends
//----------------------------------------------------------------
//extends는 상속을 표현하기위한키워드이다
//class BusineeeMain extends Man{
//상속은 기존에 정의된 클래스에 메소드와 변수를 추가하여 새로운클래스를 정의하는것이다.
//extends BusinessMan은 Man클래스를 상속한다는 이야기임
//

//5.class
// 클래스는메소드와 속성으로구성되어있다 
// 크래스는 객체의목적이나 기능에대해설명한설계도이다
// 객체는 데이터혹은 기능을가지고 어떤목적을 수행한다
// 클래스=데이터영역+기능영역 으로 구성된다 객
// 객체의기능은 클래스의 메소드로부터 만드어지며 객체의데이터는 클래스의속성으로부터 만들어진다 
// 클래스는 여러개의 메소드와 속성을가질수 있아 속성은 클래스의변수를 의미한다 즉 클래스영역에서
// 변수를 선언한것을 속성이라고 한다
// 크래스구성
// 1-메소드: 메소드는 개발자가원하는결과를 얻기위한 명령구분들을 하나의 이름으로 정희한묶음이다 즉 클래스에서 실행가능한 기능을의미한다
//// 메소드사용방범 클래스이름 객체이름 = new 생성자이름;
//              변수형 변수이름 = 생성된객체이름.메소드이름 (매개변수);
//               -먼저메소드가 선언되어있는 클래스를인스턴스화해서 객체를 만들어야함자-인스턴스 과정을 거쳐야 jvm메모기위에
//               클래스매용을 바탕으로 객체가 생성되기때문이다.
//    객체를 생성하기위한 특별한메소드 생성자
//     생성자는 클래스를 객체로 만들때  jvm힙 메모리에 데이터를 생성하는 인스턴스 과정에 사용되는 메소드의 한 종류로  new키워드화함께
//     호출된다
//     메소드의 선언부에는 반환할 데이터형이 있는데 생성자에는 반환데이타명이 없다
//      클래스이름 변수이름 = new 생성자이름 
//////
////////}
