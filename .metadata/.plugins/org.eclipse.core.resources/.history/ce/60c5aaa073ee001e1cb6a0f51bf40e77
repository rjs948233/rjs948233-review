package task04;

import exceptionTask.MyException;

public class Excep01 {
//	문자열을 입력받아, 입력받은 문자열을 정수로 변환하여 출력하는 프로그램을 작성하세요. 
//	만약 입력받은 문자열이 숫자가 아닐 경우, NumberFormatException 예외가 발생하게 되며
//	"숫자가 아닌 문자열이 입력되었습니다"라는 메시지를 출력할것

	//필드  
	String munja;
	
	//생성자  
	public Excep01() {
	super();
    }

	public Excep01(String munja) {
	super();
	this.munja = munja;
    }

	//메소드
		
		
    //	문자열을 입력받아, 입력받은 문자열을 정수로 변환하여 출력하는 프로그램을 작성하세요. 
    //	만약 입력받은 문자열이 숫자가 아닐 경우, NumberFormatException 예외가 발생하게 되며
    //	"숫자가 아닌 문자열이 입력되었습니다"라는 메시지를 출력할것
		void trans(String data) throws MyException{
			if(balance < amount) {
				throw new MyException("출금이 불가능합니다. 현재 잔고는 "+ this.balance + "원이며, 출금금액의 " 
			+ (amount-this.balance) + "원이 부족합니다");
			}else {
				balance -= amount;
				System.out.println(amount + "원이 출금되었습니다. 현재 잔고는 "+ this.balance +"입니다");
			}
		}

		
	//입금메소드 : deposit 매개변수 1개
//		잔액에 입금된 금액 추가후 입금된 금액은 _원입니다. 현재 잔고는 _원입니다. 출력
		void deposit(int amount) {
			balance += amount;
			System.out.println(amount +"원이 입급되었습니다. 현재 잔고는 " + this.balance + "입니다");
		}
			
//		모든 예외처리는 메소드를 사용하는 쪽으로 던지기

		//AccountMain클래스
//		메인메소드
//		입금메소드 호출
//		출금메소드 호출
		
		
//		사용자 예외 정의 클래스
//		MyException extends Exception
		
	}

}
